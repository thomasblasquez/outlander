[General]
gameName=Morrowind
modid=52105
version=1.2.1.0
newestVersion=1.2.1.0
category="9,"
nexusFileStatus=1
installationFile=Dynamic Object Replacer-52105-1-2-1-1717825593.7z
repository=Nexus
ignoredVersion=
comments=
notes=
nexusDescription="[color=#a2c4c9][size=6][b]MWSE Dynamic Object Replacer[/b]\n<br />[/size][/color]\n<br />[color=#a2c4c9][size=4]Inspired by powerOfThree's amazing [url=https://www.nexusmods.com/skyrimspecialedition/mods/60805]Base Object Swapper[/url]\xa0\x66or Skyrim, this mod adds a (fairly simple) MWSE framework for loading config files to dynamically replace object references at runtime. No lua coding knowledge is required!\xa0\n<br />\n<br />As of 1.1.0, the old way of loading config files still works, but there is an additional API included for your own lua mods.\n<br />\n<br />[/size][/color][color=#a2c4c9][b]\xfeff[size=5]Requirements[/size][/b]\n<br />[list]\n<br />[*][color=#a2c4c9][size=4]MWSE[/size][/color]\n<br />[/list][size=4][b]\n<br />[/b][/size][/color][color=#a2c4c9][size=5][b]Details[/b][/size]\n<br />[size=4]Config files go into [b]Data Files/MWSE/mods/_OR_/[/b] and require a specific format (we'll get to that later!). On startup, this mod loads all config files and merges any conflicting entries.\n<br />\n<br />[b]As of 1.1.0[/b], you can now simply include the DOR library in your lua mods as an [b]additional [/b]way to load config files.\xa0\n<br />\n<br />[code]-- simply place something like this in your lua file\n<br />\n<br />\xfefflocal objectReplacer = require(\"DOR.GPObjectReplacer\")\n<br />\n<br />-- and then call objectReplacer.loadORFile(filepath) to load your config file (can be located anywhere and named anything)\n<br />\n<br />objectReplacer.loadORFile(yourConfigFilePathHere)\n<br />\n<br />That's it![/code]\n<br />\n<br />Then every time an object is loaded (referenceActivated) this mod checks for objects to replace and calculates the chances (if given) accordingly. The mod doesn't actually replace the base object of the reference, but simply creates a new reference with the same scale, position, and orientation and disables the old one. Therefore, it is best to replace objects with similar mesh structures.\n<br />\n<br />[/size][size=5][b]File Structure\n<br />[/b][/size][size=4]To get started, simply create a file in\xa0[b]Data Files/MWSE/mods/_OR_/[/b]\xa0\x61nd call it whatever you like, as long as the file name starts with _OR_. I would recommend naming it like so [b]_OR_YourModName.lua\n<br />\n<br />[/b]Note that the _OR_ prefix and .lua extension are required. ([b]Unless [/b]you are loading a config file through your own lua mod)\n<br />[/size]\n<br />[size=4]Here is an example of such a file for replacing gold coins with different coins (from my now released mod [url=https://www.nexusmods.com/morrowind/mods/54792]Wealth Beyond Measure[/url]) comments are added for clarity.\xa0\n<br />\n<br />[b]IMPORTANT: [/b]You must structure your file identically to this example, including naming convention\n<br />\n<br />[b]_OR_GPBank.lua[/b]\n<br />[code]objectsToReplace = {\n<br />\xa0 \xa0 objectToReplace0 = {\n<br />      oldObject = \"Gold_001\",\n<br />      newObjects = {\n<br />         newObject0 = {\n<br />            newObject = \"GPBankSeptimSilver\",\n<br />            replaceChance = 0.25,\n<br />   \xfeff   \xfeff   \xfeff   \xfeff\x65xcludedCell = {\n<br />   \xfeff   \xfeff   \xfeff   \xfeff   \xfeff{cellName = \"Addamasartus\"},\n<br />   \xfeff   \xfeff   \xfeff   \xfeff},\n<br />         },\n<br />         newObject1 = {\n<br />            newObject = \"GPBankSeptimGold\",\n<br />            replaceChance = 0.05,\n<br />         }\n<br />      }\n<br />   },\n<br />   objectToReplace1 = {\n<br />      oldObject = \"Gold_005\",\n<br />      newObjects = {\n<br />         newObject0 = {\n<br />            newObject = \"GPBankSeptimSilver_005\",\n<br />            replaceChance = 0.10,\n<br />         },\n<br />         newObject1 = {\n<br />            newObject = \"GPBankSeptimGold_005\",\n<br />            replaceChance = 1,\n<br />   \xfeff   \xfeff   \xfeff   \xfeffspecificCell = {\n<br />   \xfeff   \xfeff   \xfeff   \xfeff   \xfeff{cellName = \"house\"},\n<br />   \xfeff   \xfeff   \xfeff   \xfeff},\n<br />         }\n<br />      }\n<br />   },\n<br />}\n<br />return objectsToReplace\n<br />[/code][/size]\n<br />[size=4][b]objectsToReplace - [/b]The root object of a mod's config file. Contains all other objects\n<br />[b]----objectToReplaceX - [/b]A series of structures inside the root object, each representing a unique base object to replace\n<br />[b]--------oldObject - [/b]The object you want to replace. The value should be the string ID of the base object.\n<br />[b]--------newObjects - [/b]A structure containing possible replacer objects\n<br />[b]------------newObjectX - [/b]An object representing a possible replacer object\n<br />[b]----------------newObject - [/b]A possible replacer object.\xa0The value should be the string ID of the replacer object.\n<br />[b]----------------replaceChance -\xa0[/b]The chance from 0 to 1 as a float that this newObject will replace the listed oldObject. If this is not declared, will default to 1 (100%)\n<br />[b]----------------excludedCell -\xa0[/b]A structure of individual table objects, each with a single field [b]cellName[/b]. The name can be an exact cell name or a string pattern to search for. In this example, the replacer will be considered in all cells except Addamasartus.\n<br />[b]----------------specificCell - [/b]A structure of individual table objects, each with a single field\xa0[b]cellName[/b]. Like excludedCell, the name can be an exact cell name or a string pattern to search for. In this example, the replacer will be considered only in cells that contain the substring \"house\".\n<br />\n<br />Don't worry about capitalization in these names, the check capitalizes both strings and then compares. Do, however, be wary of excess punctuation and whitespace.\n<br />\n<br />My code is also documented if you want to take a look at the internal logic.[/size]\n<br />\n<br />[b][size=5]Prioritizing Entries\n<br />[/size][/b][size=4]Should you have multiple entries for a single base object this mod will sort them like so:[/size]\n<br />[list]\n<br />[*][size=3]Entries with a specific cell specified are calculated before all others in that cell[/size]\n<br />[*][size=3]Entries with a higher chance are calculated before entries with a lower chance[/size]\n<br />[*][size=3]If two entries have the same specific cell specified, will calculate the one with higher chance[/size]\n<br />[*][size=3]If two entries have the same chance, will calculate whichever comes first \xfeff\x61lphabetically[/size]\n<br />[/list][size=5]\n<br />[b]Future Plans[/b][/size]\n<br />[size=4]Continued support and additional features such as more conditions for swapping.\n<br />[/size][/color][color=#a2c4c9][size=5]\n<br />[b]Credits[/b]\n<br />[/size][/color][color=#a2c4c9][size=4]NullCascade and co for MWSE\n<br />\xfeff\x42\x65thesda for Morrowind[/size][/color]"
url=
hasCustomURL=false
lastNexusQuery=2025-05-17T21:26:52Z
lastNexusUpdate=2025-05-17T21:26:52Z
nexusLastModified=2024-06-08T05:46:33Z
converted=false
validated=false
color=@Variant(\0\0\0\x43\0\xff\xff\0\0\0\0\0\0\0\0)
tracked=0
endorsed=0

[installedFiles]
1\modid=52105
1\fileid=1000045527
size=1
